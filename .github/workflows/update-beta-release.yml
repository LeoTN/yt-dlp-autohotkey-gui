name: Update Latest Beta Release

on:
    push:
        branches: 
            - development

env:
  LATEST_TAG_NAME: ""

jobs:
    figure_out_release_version:
        name: Evaluate Correct Beta Release Version
        runs-on: windows-latest
        outputs:
          beta_version: ${{ steps.set_latest_release_version_id.outputs.FINAL_BETA_VERSION }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Get Latest Release Version
              id: get_latest_release_version_id
              run: |
                # Calling GitHub API for the latest tag name.
                $response = Invoke-WebRequest -Uri "https://api.github.com/repos/LeoTN/yt-dlp-autohotkey-gui/tags" -Method Get
                $latestTag = ($response.Content | ConvertFrom-Json)[0].name
                echo "The received tag name is [$latestTag]."
                if ($latestTag -like "") {
                  echo "Empty tag received! Exiting workflow..."   
                  throw
                }
                echo "LATEST_TAG_NAME=$latestTag" >> $GITHUB_ENV

            - name: Figure Out Beta Release Version
              id: set_latest_release_version_id
              run: |
                $currentVersion = ${{ env.LATEST_TAG_NAME }}
                # Remove unwanted letters.
                if ($currentVersion -like "*-beta") {
                    $currentVersion = $currentVersion.Replace("-beta", "")
                    $currentVersion = $currentVersion.Replace("v", "") 
                }
                $finalVersion = $currentVersion
                Write-Host "The beta version will be [$finalVersion]."
                if (-not ($finalVersion -match '^\d+\.\d+\.\d+$')) {
                  echo "Invalid beta version! Exiting workflow..."   
                  throw
                }
                echo "FINAL_BETA_VERSION=$finalVersion" >> $GITHUB_OUTPUT
    
    start_ci_workflow:
        name: Launch Release Workflow
        needs: figure_out_release_version
        permissions:
          contents: write
        uses: ./.github/workflows/build-installer-archive.yml
        with:
          version: ${{ needs.figure_out_release_version.outputs.beta_version }}
          is_pre_release: true