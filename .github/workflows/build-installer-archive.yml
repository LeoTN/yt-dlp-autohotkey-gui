name: Build VideoDownloader Installer Archive

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release Version"
        type: string
        default: "0.0.0"
        required: true

      is_pre_release:
        type: boolean
        description: "Pre-Release"
        default: true
        required: true
        
  workflow_call:
    inputs:
      version:
        description: "Release Version"
        type: string
        default: "0.0.0"
        required: true

      is_pre_release:
        type: boolean
        description: "Pre-Release"
        default: true
        required: true

env:
  FINAL_EXECUTABLE_NAME: VideoDownloader.exe
  FINAL_TOOLTIP_EXECUTABLE_NAME: DownloadOptionsGUITooltips.exe
  FINAL_INSTALLER_NAME: VideoDownloaderInstaller.msi
  FINAL_INSTALLER_ARCHIVE_NAME: VideoDownloaderInstaller.zip
  RELEASE_VERSION: ${{ inputs.version }}
  RELEASE_NAME: ""
  IS_PRE_RELEASE: ${{ inputs.is_pre_release }}

jobs:
  build_exe_files:
    name: Build and Upload Executable Artifacts
    runs-on: windows-2019

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Extract Autohotkey Compiler
      run: |
        # Set Variables
        $ahkFolder = "${{ github.workspace }}\ahk"
        $ahkV2Folder = "${{ github.workspace }}\ahk-v2"

        # Extract the files.
        Expand-Archive -Path "${{ github.workspace }}\compiler\ahk.zip" -DestinationPath $ahkFolder
        Expand-Archive -Path "${{ github.workspace }}\compiler\ahk-v2.zip" -DestinationPath $ahkV2Folder

    - name: Compile Autohotkey Main Script
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "${{ github.workspace }}\VideoDownloader.ahk"
        $scriptPathOut = "${{ github.workspace }}\$env:FINAL_EXECUTABLE_NAME"

        # Compile the script.
        ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey64.exe" /silent
        echo "The executable will be saved to $scriptPathOut"

    - name: Compile Autohotkey Tooltip Script
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "${{ github.workspace }}\yt_dlp_autohotkey_gui_files\library\scripts\DownloadOptionsGUITooltips.ahk"
        $scriptPathOut = "${{ github.workspace }}\$env:FINAL_TOOLTIP_EXECUTABLE_NAME"

        # Compile the script.
        ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey64.exe" /silent
        echo "The executable will be saved to $scriptPathOut"

    - name: Upload Main Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.FINAL_EXECUTABLE_NAME }}
        path: ${{ github.workspace }}\${{ env.FINAL_EXECUTABLE_NAME }}

    - name: Upload Tooltip Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.FINAL_TOOLTIP_EXECUTABLE_NAME }}
        path: ${{ github.workspace }}\${{ env.FINAL_TOOLTIP_EXECUTABLE_NAME }}

  build_msi_file:
    runs-on: windows-2019
    name: Build and Upload MSI Installer File
    needs: build_exe_files
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Download Main Executable Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.FINAL_EXECUTABLE_NAME }}
          path: ${{ github.workspace }}

      - name: Download Tooltip Executable Artifact
        uses: actions/download-artifact@v3
        with:
         name: ${{ env.FINAL_TOOLTIP_EXECUTABLE_NAME }}
         path: ${{ github.workspace }}\yt_dlp_autohotkey_gui_files\library\scripts
        
      - name: Build .AIP Project
        uses: caphyon/advinst-github-action@main
        with:
          advinst-enable-automation: 'true'
          aip-path: ${{ github.workspace }}\compiler\VideoDownloaderInstaller.aip
          aip-build-name: DefaultBuild
          aip-package-name: ${{ env.FINAL_INSTALLER_NAME }}
          aip-output-dir:  ${{ github.workspace }}
          aip-commands: |
            SetVersion "${{ env.RELEASE_VERSION }}"
            
      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.FINAL_INSTALLER_NAME }}
          path: ${{ github.workspace }}\${{ env.FINAL_INSTALLER_NAME }}
 
  create_release:
    name: Download Executable Artifact and Create Release
    needs: build_msi_file
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
     
    - name: Download Installer Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.FINAL_INSTALLER_NAME }}
        path: ${{ github.workspace }}/yt_dlp_autohotkey_gui_files/library/setup/Files

    - name: Set Release Name
      run: |
        if [ "${{ env.IS_PRE_RELEASE }}" == "true" ]; then
          releaseName="v${{ env.RELEASE_VERSION }}-beta"
        else
          releaseName="v${{ env.RELEASE_VERSION }}"
        fi
          echo "RELEASE_NAME=$releaseName" >> $GITHUB_ENV
          cat <<'EOF' > "${{ github.workspace }}/yt_dlp_autohotkey_gui_files/library/setup/version.txt"
           _____                                                                                            _____ 
          ( ___ )                                                                                          ( ___ )
           |   |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|   | 
           |   |                                                                                            |   | 
           |   |                                                                                            |   | 
           |   |    __     ___     _            ____                      _                 _               |   | 
           |   |    \ \   / (_) __| | ___  ___ |  _ \  _____      ___ __ | | ___   __ _  __| | ___ _ __     |   | 
           |   |     \ \ / /| |/ _` |/ _ \/ _ \| | | |/ _ \ \ /\ / / '_ \| |/ _ \ / _` |/ _` |/ _ \ '__|    |   | 
           |   |      \ V / | | (_| |  __/ (_) | |_| | (_) \ V  V /| | | | | (_) | (_| | (_| |  __/ |       |   | 
           |   |       \_/  |_|\__,_|\___|\___/|____/ \___/ \_/\_/ |_| |_|_|\___/ \__,_|\__,_|\___|_|       |   | 
           |   |                                                                                            |   | 
           |   |    __     __            _                                                                  |   | 
           |   |    \ \   / /__ _ __ ___(_) ___  _ __                                                       |   | 
           |   |     \ \ / / _ \ '__/ __| |/ _ \| '_ \                                                      |   | 
           |   |      \ V /  __/ |  \__ \ | (_) | | | |                                                     |   | 
           |   |       \_/ \___|_|  |___/_|\___/|_| |_|                                                     |   | 
           |   |                                                                                            |   | 
           |   |                                                                                            |   | 
           |   |                                                                                            |   | 
           |___|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|___| 
          (_____)                                                                                          (_____)

          EOF
          sed -i "s/EOF/This installer archive will install version $releaseName of VideoDownloader./g" "${{ github.workspace }}/yt_dlp_autohotkey_gui_files/library/setup/version.txt"
          
    - name: Compress Installer Archive
      run: |
        cd "${{ github.workspace }}/yt_dlp_autohotkey_gui_files/library/setup"
        zip -r "${{ github.workspace }}/${{ env.FINAL_INSTALLER_ARCHIVE_NAME }}" .

    - name: Print Release Name
      run: echo "The release name is ${{ env.RELEASE_NAME }}"

    - name: Update Release Tag
      uses: richardsimko/update-tag@v1
      with:
        tag_name: ${{ env.RELEASE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: ${{ github.workspace }}/${{ env.FINAL_INSTALLER_ARCHIVE_NAME }}
        artifactErrorsFailBuild: true
        artifactContentType: "application/executable"
        removeArtifacts: true
        replacesArtifacts: true
        body: "Download the ${{ env.FINAL_INSTALLER_ARCHIVE_NAME }} file, extract it and execute VideoDownloader-Setup.exe. Have fun :)"
        generateReleaseNotes: true
        makeLatest: true
        prerelease: ${{ env.IS_PRE_RELEASE == 'true' }}
        name: ${{ env.RELEASE_NAME }}
        tag: ${{ env.RELEASE_NAME }}