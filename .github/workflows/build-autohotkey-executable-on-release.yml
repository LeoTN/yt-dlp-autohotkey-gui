name: Build and Attach Autohotkey Executable to Release

on:
  release:
    types: [created]

jobs:
  build_and_attach:
    name: Build and Attach Autohotkey Executable to Release
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download and Extract Ahk2Exe Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"
        # Extract it.
        Expand-Archive -Path "ahk.zip" -DestinationPath "ahk"
        
    - name: Download and Extract Autohotkey v2 Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk-v2.zip" -OutFile "ahk-v2.zip"
        # Extract it.
        Expand-Archive -Path "ahk-v2.zip" -DestinationPath "ahk-v2"
        
    - name: Compile Autohotkey Script and Create Release
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "VideoDownloader.ahk"
        $scriptPathOut = "VideoDownloader.exe"
        
        # Compile the script.
        & ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey32.exe" /silent

        # Create the release
        tag_name="${{ github.ref }}"
        release_response=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Content-Type: application/json" \
                          -d "{\"tag_name\": \"$tag_name\",\"name\": \"Release $tag_name\",\"draft\": false,\"prerelease\": false}" \
                          "https://api.github.com/repos/${{ github.repository }}/releases")
        
        echo "Release created successfully."
        release_id=$(echo "$release_response" | jq -r '.id')
        echo "Release ID: $release_id"

    - name: Upload Executable to Release
      run: |
        # Set the paths.
        $scriptPathOut = "VideoDownloader.exe"
        upload_url="https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=VideoDownloader.exe"

        # Upload the executable to the release.
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: $(file -b --mime-type VideoDownloader.exe)" \
          --data-binary @VideoDownloader.exe "$upload_url"

    - name: Cleanup
      run: |
        rm VideoDownloader.exe
