name: Build and Attach Autohotkey Executable to Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Attach Autohotkey Executable to Release
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download and Extract Ahk2Exe Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"
        # Extract it.
        Expand-Archive -Path "ahk.zip" -DestinationPath "ahk"
        
    - name: Download and Extract Autohotkey v2 Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk-v2.zip" -OutFile "ahk-v2.zip"
        # Extract it.
        Expand-Archive -Path "ahk-v2.zip" -DestinationPath "ahk-v2"
        
    - name: Compile Autohotkey Script
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "VideoDownloader.ahk"
        $scriptPathOut = "VideoDownloader.exe"
        
        # Compile the script.
        ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey32.exe" /silent

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: VideoDownloader
        path: VideoDownloader.exe

  upload:
    name: Upload Executable to Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Get Release
      id: create_or_get_release
      uses: marvinpinto/action-automatic-releases@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Get Upload URL
      id: get_upload_url
      run: |
        echo "::set-output name=upload_url::$(curl --request POST --header 'Authorization: Bearer $GITHUB_TOKEN' --header 'Content-Type: application/octet-stream' 'https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=myasset.txt' | jq -r '.upload_url')"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: ${{ steps.create_or_get_release.outputs.release_id }}

    - name: Upload Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: VideoDownloader.exe
        asset_name: VideoDownloader.exe
        asset_content_type: application/executable
