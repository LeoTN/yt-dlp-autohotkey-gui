name: Create new Release and Attach Autohotkey Execuable

on:
  create:
    tags:
      - 'v*' # Triggers only if the tag name begins with a v.

jobs:
  build:
    name: Build and Upload Executable Artifact
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download and Extract Ahk2Exe Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"
        # Extract it.
        Expand-Archive -Path "ahk.zip" -DestinationPath "ahk"
        
    - name: Download and Extract Autohotkey v2 Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk-v2.zip" -OutFile "ahk-v2.zip"
        # Extract it.
        Expand-Archive -Path "ahk-v2.zip" -DestinationPath "ahk-v2"
        
    - name: Compile Autohotkey Script
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "VideoDownloader.ahk"
        $scriptPathOut = "VideoDownloader.exe"
        
        # Compile the script.
        ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey32.exe" /silent

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: VideoDownloader
        path: VideoDownloader.exe

  create_release:
  - name: Create new Release
    needs: build
    steps:
    - name: Release Creation
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      id: get_tag_name
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: "Empty"
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Executable Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: VideoDownloader.exe
        asset_name: VideoDownloader.exe
        asset_content_type: application/executable
