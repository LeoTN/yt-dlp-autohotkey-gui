name: Build and Attach Autohotkey Executable to Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Attach Autohotkey Executable to Release
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download and Extract Ahk2Exe Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"
        # Extract it.
        Expand-Archive -Path "ahk.zip" -DestinationPath "ahk"
        
    - name: Download and Extract Autohotkey v2 Binary File
      run: |
        # Download AutoHotkey zip file.
        Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk-v2.zip" -OutFile "ahk-v2.zip"
        # Extract it.
        Expand-Archive -Path "ahk-v2.zip" -DestinationPath "ahk-v2"
        
    - name: Compile Autohotkey Script
      run: |
        # Set the paths to execute more easily.
        $scriptPathIn = "VideoDownloader.ahk"
        $scriptPathOut = "VideoDownloader.exe"
        
        # Compile the script.
        & ahk\Compiler\Ahk2Exe.exe /in $scriptPathIn /out $scriptPathOut /base "ahk-v2\AutoHotkey32.exe" /silent

    - name: Upload Executable
      uses: actions/upload-artifact@v2
      with:
        name: VideoDownloader
        path: VideoDownloader.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Get Asset ID
      id: get_asset_id
      run: |
        asset_id=$(curl -s -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets" \
          | jq -r '.[] | select(.name == "VideoDownloader.exe") | .id')
        echo "Asset ID: $asset_id"
        echo "::set-output name=asset_id::$asset_id"

    - name: Upload Asset with Specific Token
      run: |
        asset_url="https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=VideoDownloader.exe"
        curl -X POST -H "Authorization: token ${{ secrets.WORKFLOW_TOKEN_AHK }}" \
          -H "Content-Type: $(file -b --mime-type VideoDownloader.exe)" \
          --data-binary @VideoDownloader.exe "$asset_url"

    - name: Publish Release
      run: |
        curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}" \
          -d '{"draft": false}'

    - name: Cleanup
      run: |
        rm VideoDownloader.exe
